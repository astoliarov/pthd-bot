// Code generated by MockGen. DO NOT EDIT.
// Source: teamkillbot/pkg (interfaces: ITeamKillLogDAO)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	pkg "teamkillbot/pkg/entities"

	gomock "github.com/golang/mock/gomock"
)

// MockITeamKillLogDAO is a mock of ITeamKillLogDAO interface.
type MockITeamKillLogDAO struct {
	ctrl     *gomock.Controller
	recorder *MockITeamKillLogDAOMockRecorder
}

// MockITeamKillLogDAOMockRecorder is the mock recorder for MockITeamKillLogDAO.
type MockITeamKillLogDAOMockRecorder struct {
	mock *MockITeamKillLogDAO
}

// NewMockITeamKillLogDAO creates a new mock instance.
func NewMockITeamKillLogDAO(ctrl *gomock.Controller) *MockITeamKillLogDAO {
	mock := &MockITeamKillLogDAO{ctrl: ctrl}
	mock.recorder = &MockITeamKillLogDAOMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITeamKillLogDAO) EXPECT() *MockITeamKillLogDAOMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockITeamKillLogDAO) Save(arg0 *pkg.TeamKill) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockITeamKillLogDAOMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockITeamKillLogDAO)(nil).Save), arg0)
}
